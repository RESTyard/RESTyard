{{-
    include "../_common.sbn"

    func mapNullableType
        if $0
            ret $1 + "?"
        else
            ret $1
        end
    end

    func mapScopeName
        ret $0 | string.handleize | string.replace '-' '_' | string.upcase
    end

    func mapScope
        ret "PermissionScopes." + (mapScopeName $0)
    end

    func generateScopeHelper
        policies = $0
-}}
private static readonly string[] allowedScopes = new string[]
{
{{~
        for permission in policies.Permissions.Permission
~}}
    {{ mapScope permission.scope }},
{{~
        end
~}}
};

public static bool IsInScope(IEnumerable<string> currentScopes)
    => !allowedScopes.Except(currentScopes).Any();
{{-
    end
-}}
#nullable enable
{{ IncludeContent }}

{{- if isNotEmpty Namespace }}
namespace {{ Namespace }};
{{- end }}

{{
    scopes = []
    for document in Documents
        if document.Policies && document.Policies.Permissions && document.Policies.Permissions.Permission
            for permission in document.Policies.Permissions.Permission
                scopes = array.add scopes permission.scope
            end
        end
        for operation in document.Operations
            if operation.Policies && operation.Policies.Permissions && operation.Policies.Permissions.Permission
                for permission in operation.Policies.Permissions.Permission
                    scopes = array.add scopes permission.scope
                end
            end
        end
    end
-}}
public static class PermissionScopes
{
{{- for scope in (scopes | array.uniq | array.sort) }}
    public const string {{ mapScopeName scope }} = "{{ scope }}";
{{- end }}
}
{{
    for document in Documents
}}
public partial class {{ document.name }}Hto
{
{{-
        if document.Policies
}}
    {{ generateScopeHelper document.Policies }}
{{
        end
        for operation in document.Operations
            if operation.Policies
}}
    public partial class {{ operation.name }}Op
    {
        {{ generateScopeHelper operation.Policies }}
    }
{{-
            end
        end
}}
}
{{
    end
}}
