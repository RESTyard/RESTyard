@inherits RazorTemplateBase

@{
    var typeName = $"{DocumentType.name}Hto";
    var selfLinkType = $"ILink<{typeName}>";
    var baseType = string.IsNullOrEmpty(DocumentType.parentDocument)
        ? (DocumentType.isQueryResult
            ? "HypermediaQueryResult"
            : Version switch {
                { Major: 4 } => "HypermediaObject",
                _ => "IHypermediaObject"})
        : DocumentType.parentDocument + "Hto";
    var parentHasSelfLink = !string.IsNullOrEmpty(DocumentType.parentDocument) || DocumentType.isQueryResult;
    var classes = string.Join(", ", DocumentType.Classifications.Select(c => $"\"{c.@class}\""));
    CheckProperties(DocumentType.name, DocumentType.Properties);
}

<Attribute>HypermediaObject(Title = "@DocumentType.title", Classes = new string[] { @classes })</Attribute>
<Class Name="@typeName" Inherits="@baseType">
    @foreach (var property in DocumentType.Properties)
    {
        <Property Schema="@Schema" PropertyType="@property"/>
    }
    @foreach (var link in DocumentType.Links)
    {
        <LinkProperty Schema="@Schema" LinkType="@link"/>
    }
    @foreach (var embeddedEntity in DocumentType.Entities)
    {
        <EmbeddedEntityProperty Schema="@Schema" EntityType="@embeddedEntity"/>
    }
    @if (DocumentType.hasSelfLink)
    {
        <Attribute>Relations([DefaultHypermediaRelations.Self])</Attribute>
        <PropertyStatement TypeName="@selfLinkType" PropertyName="Self" HasNewKeyword="@parentHasSelfLink" />
    }
    <OperationProperties Schema="@Schema" List="@DocumentType.Operations"/>
    <Constructor Schema="@Schema" Document="@DocumentType" Version="@Version" />
    <KeyRecord Schema="@Schema" Document="@DocumentType"/>
    <OperationClasses Schema="@Schema" Document="@DocumentType"/>
</Class>

@code {
    [Parameter] public DocumentType DocumentType { get; set; } = null!;
    [Parameter] public Version Version { get; set; } = null!;
}
