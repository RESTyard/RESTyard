//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.18.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace WebApi.HypermediaExtensions.WebApi.Formatter.Siren
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.18.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class EmbeddedLinkSubEntity 
    {
        /// <summary>Describes the nature of an entity's content based on the current representation. Possible values are implementation-dependent and should be documented.</summary>
        [Newtonsoft.Json.JsonProperty("class", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> Class { get; set; }
    
        /// <summary>Defines the relationship of the sub-entity to its parent, per Web Linking (RFC5899).</summary>
        [Newtonsoft.Json.JsonProperty("rel", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<string> Rel { get; set; } = new System.Collections.ObjectModel.Collection<string>();
    
        /// <summary>The URI of the linked sub-entity.</summary>
        [Newtonsoft.Json.JsonProperty("href", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Uri Href { get; set; }
    
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(application|audio|image|message|model|multipart|text|video)\/([A-Z]|[a-z]|[0-9]|[\!\#\$\&\.\+\-\^\_]){1,127}(; ?(([\!\#\$\%\&\'\(\)\*\+-\.\/]|[0-9]|[A-Z]|[\^\_\`\]\|]|[a-z]|[\|\~])+)+=((([\!\#\$\%\&\'\(\)\*\+-\.\/]|[0-9]|[A-Z]|[\^\_\`\]\|]|[a-z]|[\|\~])+)|""([\!\#\$\%\&\.\(\)\*\+\,\-\.\/]|[0-9]|[\:\;\<\=\>\?\@]|[A-Z]|[\[\\\]\^\_\`]|[a-z]|[\{\|\}\~])+""))*$")]
        public string Type { get; set; }
    
        /// <summary>Descriptive text about the entity.</summary>
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.18.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class EmbeddedRepresentationSubEntity : Entity
    {
        /// <summary>Defines the relationship of the sub-entity to its parent, per Web Linking (RFC5899).</summary>
        [Newtonsoft.Json.JsonProperty("rel", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<string> Rel { get; set; } = new System.Collections.ObjectModel.Collection<string>();
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>Actions show available behaviors an entity exposes.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.18.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Action 
    {
        /// <summary>Describes the nature of an action based on the current representation. Possible values are implementation-dependent and should be documented.</summary>
        [Newtonsoft.Json.JsonProperty("class", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> Class { get; set; }
    
        /// <summary>A string that identifies the action to be performed. Action names MUST be unique within the set of actions for an entity. The behaviour of clients when parsing a Siren document that violates this constraint is undefined.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>An enumerated attribute mapping to a protocol method. For HTTP, these values may be GET, PUT, POST, DELETE, or PATCH. As new methods are introduced, this list can be extended. If this attribute is omitted, GET should be assumed.</summary>
        [Newtonsoft.Json.JsonProperty("method", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ActionMethod Method { get; set; } = ActionMethod.GET;
    
        /// <summary>The URI of the action.</summary>
        [Newtonsoft.Json.JsonProperty("href", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Uri Href { get; set; }
    
        /// <summary>Descriptive text about the action.</summary>
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; }
    
        /// <summary>The encoding type for the request. When omitted and the fields attribute exists, the default value is `application/x-www-form-urlencoded`.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Type { get; set; } = "application/x-www-form-urlencoded";
    
        /// <summary>A collection of fields.</summary>
        [Newtonsoft.Json.JsonProperty("fields", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Field> Fields { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>Fields represent controls inside of actions.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.18.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Field 
    {
        /// <summary>A name describing the control. Field names MUST be unique within the set of fields for an action. The behaviour of clients when parsing a Siren document that violates this constraint is undefined.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        /// <summary>The input type of the field. This is a subset of the input types specified by HTML5.</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public FieldType Type { get; set; } = FieldType.Text;
    
        /// <summary>Textual annotation of a field. Clients may use this as a label.</summary>
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; }
    
        /// <summary>A value assigned to the field.  May be a scalar value or a list of value objects.</summary>
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Value { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>Value objects represent multiple selectable field values. Use in conjunction with field `"type" = "radio"` and `"type" = "checkbox"` to express that zero, one or many out of several possible values may be sent back to the server.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.18.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class FieldValueObject 
    {
        /// <summary>Textual description of a field value.</summary>
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; }
    
        /// <summary>Possible value for the field.</summary>
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public double Value { get; set; }
    
        /// <summary>A value object with a `"selected" = true` attribute indicates that this value should be considered preselected by the client. When missing, the default value is `false`.</summary>
        [Newtonsoft.Json.JsonProperty("selected", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Selected { get; set; } = false;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>Links represent navigational transitions.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.18.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Link 
    {
        /// <summary>Describes aspects of the link based on the current representation. Possible values are implementation-dependent and should be documented.</summary>
        [Newtonsoft.Json.JsonProperty("class", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> Class { get; set; }
    
        /// <summary>Text describing the nature of a link.</summary>
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; }
    
        /// <summary>Defines the relationship of the link to its entity, per Web Linking (RFC5988).</summary>
        [Newtonsoft.Json.JsonProperty("rel", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Rel { get; set; } = new System.Collections.ObjectModel.Collection<string>();
    
        /// <summary>The URI of the linked resource.</summary>
        [Newtonsoft.Json.JsonProperty("href", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Uri Href { get; set; }
    
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(application|audio|image|message|model|multipart|text|video)\/([A-Z]|[a-z]|[0-9]|[\!\#\$\&\.\+\-\^\_]){1,127}(; ?(([\!\#\$\%\&\'\(\)\*\+-\.\/]|[0-9]|[A-Z]|[\^\_\`\]\|]|[a-z]|[\|\~])+)+=((([\!\#\$\%\&\'\(\)\*\+-\.\/]|[0-9]|[A-Z]|[\^\_\`\]\|]|[a-z]|[\|\~])+)|""([\!\#\$\%\&\.\(\)\*\+\,\-\.\/]|[0-9]|[\:\;\<\=\>\?\@]|[A-Z]|[\[\\\]\^\_\`]|[a-z]|[\{\|\}\~])+""))*$")]
        public string Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>An Entity is a URI-addressable resource that has properties and actions associated with it. It may contain sub-entities and navigational links.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.18.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Entity 
    {
        /// <summary>Describes the nature of an entity's content based on the current representation. Possible values are implementation-dependent and should be documented.</summary>
        [Newtonsoft.Json.JsonProperty("class", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> Class { get; set; }
    
        /// <summary>Descriptive text about the entity.</summary>
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; }
    
        /// <summary>A set of key-value pairs that describe the state of an entity.</summary>
        [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Properties { get; set; }
    
        /// <summary>A collection of related sub-entities. If a sub-entity contains an href value, it should be treated as an embedded link. Clients may choose to optimistically load embedded links. If no href value exists, the sub-entity is an embedded entity representation that contains all the characteristics of a typical entity. One difference is that a sub-entity MUST contain a rel attribute to describe its relationship to the parent entity.</summary>
        [Newtonsoft.Json.JsonProperty("entities", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ISubEntity> Entities { get; set; }
    
        /// <summary>A collection of actions; actions show available behaviors an entity exposes.</summary>
        [Newtonsoft.Json.JsonProperty("actions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Action> Actions { get; set; }
    
        /// <summary>A collection of items that describe navigational links, distinct from entity relationships. Link items should contain a `rel` attribute to describe the relationship and an `href` attribute to point to the target URI. Entities should include a link `rel` to `self`.</summary>
        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Link> Links { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.18.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ActionMethod
    {
        [System.Runtime.Serialization.EnumMember(Value = @"DELETE")]
        DELETE = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"GET")]
        GET = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PATCH")]
        PATCH = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"POST")]
        POST = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PUT")]
        PUT = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.18.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum FieldType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"hidden")]
        Hidden = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"text")]
        Text = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"search")]
        Search = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"tel")]
        Tel = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"url")]
        Url = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"email")]
        Email = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"password")]
        Password = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"datetime")]
        Datetime = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"date")]
        Date = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"month")]
        Month = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"week")]
        Week = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"time")]
        Time = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"datetime-local")]
        DatetimeLocal = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"number")]
        Number = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"range")]
        Range = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"color")]
        Color = 15,
    
        [System.Runtime.Serialization.EnumMember(Value = @"checkbox")]
        Checkbox = 16,
    
        [System.Runtime.Serialization.EnumMember(Value = @"radio")]
        Radio = 17,
    
        [System.Runtime.Serialization.EnumMember(Value = @"file")]
        File = 18,
    
    }
}